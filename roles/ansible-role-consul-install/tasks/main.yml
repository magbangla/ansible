---
# tasks file for ansible-role-consul-install

- name: Install dependencies
  package:
    name: "{{ consul_dependencies }}"
    state: present

- name: Run once & delegate to localhost block
  block:

    - name: Get latest consul version information
      uri:
        url: "{{ checkpoint_url }}"
      register: consul_data

    - name: Setting version fact
      set_fact:
        consul_version: "{{ consul_data.json.current_version }}"
      when: consul_version | default('latest') == "latest"

    - name: Setting consul download URL
      set_fact:
        consul_download: "{{ (consul_data.json.current_download_url |
          regex_replace('\\/$', '')).split('/')[0:-1] |
          join('/') }}/{{ consul_version }}/"

    - name: Getting consul chksums
      uri:
        url: "{{ consul_download }}consul_{{ consul_version }}_SHA256SUMS"
        return_content: yes
      register: consul_shasums

    - name: Set chksum search pattern
      set_fact:
        pattern: "(?:.zip\n)?(\\w+)\\s+.*{{ consul_arch }}.zip"

    - name: Set consul_chksum fact
      set_fact:
        consul_chksum: "sha256:{{ consul_shasums.content | regex_search(pattern,'\\1') | to_yaml }}"

  run_once: yes
  delegate_to: localhost

- name: Download consul binary (consul_{{ consul_version }}_{{ consul_arch }}.zip)
  get_url:
    url: "{{ consul_download }}consul_{{ consul_version }}_{{ consul_arch }}.zip"
    checksum: "{{ consul_chksum }}"
    dest: "/tmp/consul_{{ consul_version }}_{{ consul_arch }}.zip"
    force: yes
    owner: root
    group: root

- name: Unzip consul binary (consul_{{ consul_version }}_{{ consul_arch }}.zip)
  unarchive:
    src: "/tmp/consul_{{ consul_version }}_{{ consul_arch }}.zip"
    remote_src: yes
    dest: "{{ consul_bin_path }}"
    creates: "{{ consul_bin_path }}/consul"
    owner: root
    group: root
    mode: 0755
    keep_newer: true

- name: Create consul group
  group:
    name: "{{ consul_group }}"
    gid: "{{ consul_gid }}"
    state: present

- name: Create consul user
  user:
    name: "{{ consul_user }}"
    group: "{{ consul_group }}"
    uid: "{{ consul_uid }}"
    comment: "consul systemd service user"
    shell: /sbin/nologin
    system: yes
    state: present

- name: Create consul directory structures
  file:
    path: "{{ item }}"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0750
    state: directory
  with_items:
    - "{{ consul_conf | dirname }}"
    - "{{ consul_path }}/data"

- name: Generate random 16-bit base64 gossip encryption string
  set_fact:
    consul_secret: "{{ lookup('password', '/dev/null length=22 chars=ascii_letters,digits,+,/')}}=="
  run_once: yes
  when:
    - consul_secret | default("") | length != 24

- name: Create consul agent configuration
  template:
    src: agent.j2
    dest: "{{ consul_conf }}"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640

- name: Create consul systemd service config
  template:
    src: service.j2
    dest: "/etc/systemd/system/{{ consul_service }}.service"
    owner: root
    group: root
    mode: 0664
    force: no

- name: Start and enable consul systemd service
  systemd:
    name: "{{ consul_service }}"
    daemon_reload: yes
    state: started
    enabled: yes

